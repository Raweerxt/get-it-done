import React, { useState, useEffect } from 'react';
import { useNavigate } from 'react-router-dom';
import './Home.css'; 
import backgroundImage from './assets/bg.png'; 
// ‚úÖ ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ SettingsButton Component ‡∏à‡∏≤‡∏Å‡∏ó‡∏µ‡πà‡∏ï‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
import SettingsButton from './Button/Setting'; 
// üõë ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Icon ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Footer Icons ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
import { Music, Image, BookText, Home, Flame } from 'lucide-react'; 

const HomePage = () => {
    const navigate = useNavigate();
    const [userName, setUserName] = useState('');
    const [currentTime, setCurrentTime] = useState(''); 

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÉ‡∏ô Time Zone ‡πÑ‡∏ó‡∏¢
    const getThaiTime = () => {
        const now = new Date();
        const thaiTime = new Intl.DateTimeFormat('th-TH', {
            hour: '2-digit', 
            minute: '2-digit', 
            second: '2-digit', 
            hourCycle: 'h23', 
            timeZone: 'Asia/Bangkok'
        }).format(now);
        
        // üõë ‡∏õ‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞ ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á:‡∏ô‡∏≤‡∏ó‡∏µ (HH:MM) 
        return thaiTime.substring(0, 5);
    };

    useEffect(() => {
        const token = sessionStorage.getItem('token');
        const storedUsername = sessionStorage.getItem('username');

        // üõë ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á: ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏°‡∏µ Token ‡∏´‡∏£‡∏∑‡∏≠ Username ‡πÉ‡∏´‡πâ‡πÄ‡∏î‡πâ‡∏á‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Sign In
        if (!token || !storedUsername) {
            console.warn('Authentication failed: Missing token or username.');
            navigate('/signin'); 
            return; 
        }
        
        // 1. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Username 
        try {
            // ‡πÄ‡∏≠‡∏≤‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏≥‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á Username ‡∏°‡∏≤‡πÅ‡∏™‡∏î‡∏á
            const firstWordUsername = storedUsername.split(' ')[0];
            setUserName(firstWordUsername);
        } catch (error) {
            console.error('Error processing stored username:', error);
            setUserName('User');
        }

        // 2. ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÅ‡∏•‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏° Timer (Clock)
        setCurrentTime(getThaiTime());

        const timerId = setInterval(() => {
            setCurrentTime(getThaiTime());
        }, 1000);

        // Cleanup Function
        return () => {
            clearInterval(timerId);
        };
        
    }, [navigate]);

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏ô‡∏≥‡∏ó‡∏≤‡∏á (‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏∑‡πà‡∏ô)
    const handleNavClick = (path) => {
        console.log(`Navigating to ${path}`);
        // navigate(path); // ‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ path ‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÄ‡∏ä‡πà‡∏ô /tasks
    };

    return (
        <div 
            className="home-page-container"
            style={{ backgroundImage: `url(${backgroundImage})` }}
        >
            
            {/* Header / Quote */}
            <header className="home-header">
                <div className="app-branding">
                    <span className="app-name">GetItDone</span>
                    <p className="app-subtitle">by Muk and Cream</p>
                </div>
                <div className="app-quote">
                    <p>"Strive for progress,</p>
                    <p>not perfection"</p>
                </div>
            </header>

            {/* Main Content: Timer */}
            <main className="home-main-content">
                <p className="welcome-text">Hello, {userName || 'User'}</p> 
                <h1 className="homepage-title">This is Homepage Armageddon</h1>
                
                {/* Timer Display */}
                <div className="timer-display">
                    {/* üõë ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏Ñ‡πà HH:MM */}
                    {currentTime.substring(0, 5) || '00:00'} 
                </div>
            </main>
            
            {/* Footer / Navigation Icons */}
            <footer className="home-footer">
                
                {/* Left Side Icons */}
                <div className="footer-icons">
                    <button className="footer-icon-button" title="Music" onClick={() => handleNavClick('/music')}><Music size={24} color="#FFF" /></button>
                    <button className="footer-icon-button" title="Image" onClick={() => handleNavClick('/image')}><Image size={24} color="#FFF" /></button>
                </div>

                {/* Right Side Icons (Navigation) */}
                <div className="footer-icons">
                    <button className="footer-icon-button" title="Focus" onClick={() => handleNavClick('/focus')}><BookText size={24} color="#FFF" /></button>
                    <button className="footer-icon-button" title="Home" onClick={() => handleNavClick('/home')}><Home size={24} color="#FFF" /></button>
                    <button className="footer-icon-button" title="Streak" onClick={() => handleNavClick('/streak')}><Flame size={24} color="#FFF" /></button>
                    {/* ‚úÖ SettingsButton ‡∏ñ‡∏π‡∏Å‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà‡πÅ‡∏•‡πâ‡∏ß */}
                    <SettingsButton /> 
                </div>
            </footer>
        </div>
    );
};

export default HomePage;