import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';
import { Settings, X } from 'lucide-react'; 
import './Setting.css'; 

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö (‡∏¢‡πâ‡∏≤‡∏¢‡∏°‡∏≤‡∏à‡∏≤‡∏Å HomePage)
const handleLogout = (navigate) => {
    sessionStorage.removeItem('token');
    sessionStorage.removeItem('userId');
    sessionStorage.removeItem('username');
    
    // ‡πÉ‡∏ä‡πâ navigate ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ Sign-in
    navigate('/signin'); 
};

const SettingsButton = () => {
    const navigate = useNavigate();
    // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á/‡∏ã‡πà‡∏≠‡∏ô Modal (Pop-up)
    const [isSettingsOpen, setIsSettingsOpen] = useState(false);
    
    // State ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡πÄ‡∏ß‡∏•‡∏≤ Break 
    const [breakTime, setBreakTime] = useState(sessionStorage.getItem('breakTime') || '05:00'); 

    // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏• Modal
    const toggleSettings = () => {
        setIsSettingsOpen(!isSettingsOpen);
    };

    const handleTimeChange = (e) => {
        const value = e.target.value.replace(/[^0-9:]/g, ''); 
        setBreakTime(value);
        // üõë ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡∏°‡πà‡∏•‡∏á sessionStorage ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
        sessionStorage.setItem('breakTime', value);
    };

    return (
        // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å div ‡∏ó‡∏µ‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏ß‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏°‡∏ò‡∏£‡∏£‡∏°‡∏î‡∏≤ (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ö Footer ‡πÑ‡∏î‡πâ)
        <React.Fragment>
            {/* 1. ‡∏õ‡∏∏‡πà‡∏° Settings ‡∏´‡∏•‡∏±‡∏Å (‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏ü‡∏∑‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏Ç‡πâ‡∏≤‡∏á‡∏õ‡∏∏‡πà‡∏° Home) */}
            <button 
                // üõë ‡πÉ‡∏ä‡πâ‡∏Ñ‡∏•‡∏≤‡∏™‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÑ‡∏î‡πâ‡∏™‡πÑ‡∏ï‡∏•‡πå‡∏õ‡∏∏‡πà‡∏°‡πÑ‡∏≠‡∏Ñ‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°
                className="footer-icon-button" 
                onClick={toggleSettings}
                aria-label="Open Settings"
                title="Settings"
            >
                {/* üõë ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Icon ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á */}
                <Settings size={24} color="#FFF" /> 
            </button>

            {/* 2. Modal/Pop-up ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Settings (‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏°‡∏∑‡πà‡∏≠ isSettingsOpen ‡πÄ‡∏õ‡πá‡∏ô true) */}
            {isSettingsOpen && (
                <div className="settings-modal-wrapper">
                    <div className="settings-modal">
                        {/* ‡∏õ‡∏∏‡πà‡∏°‡∏õ‡∏¥‡∏î Modal */}
                        <button className="close-button" onClick={toggleSettings}>
                            {/* üõë ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ Icon ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á */}
                            <X size={20} />
                        </button>
                        
                        <h4 className="modal-title">Timer Lengths</h4>

                        <div className="setting-item">
                            <label htmlFor="break-time">Break</label>
                            <div className="input-group">
                                <input
                                    id="break-time"
                                    type="text"
                                    value={breakTime}
                                    onChange={handleTimeChange}
                                    maxLength="5"
                                    placeholder="MM:SS"
                                    className="time-input"
                                />
                                <span>mins</span>
                            </div>
                        </div>
                        
                        <div className="modal-footer">
                            <button 
                                className="logout-button" 
                                onClick={() => handleLogout(navigate)} // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô Logout
                            >
                                Logout
                            </button>
                        </div>
                    </div>
                </div>
            )}
        </React.Fragment>
    );
};

export default SettingsButton;